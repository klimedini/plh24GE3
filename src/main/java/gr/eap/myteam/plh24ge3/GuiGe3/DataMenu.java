package gr.eap.myteam.plh24ge3.GuiGe3;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import gr.eap.myteam.plh24ge3.db.DbUtil;
import gr.eap.myteam.plh24ge3.models.Searches;
import gr.eap.myteam.plh24ge3.models.Weather;
import gr.eap.myteam.plh24ge3.okhttp.Okhttp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author gnikol
 */
public class DataMenu extends javax.swing.JFrame {

    /**
     * Creates new form GuiGe3_1
     */
    public DataMenu() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        townName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        showCityData = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        tempLabel = new javax.swing.JTextField();
        humidityLabel = new javax.swing.JTextField();
        windLabel = new javax.swing.JTextField();
        uvLabel = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JTextField();
        showCityData1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Sitka Small", 2, 12)); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        townName.setAlignmentX(0.0F);
        townName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                townNameActionPerformed(evt);
            }
        });
        getContentPane().add(townName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 45, 236, -1));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Επιλογή Πόλης :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 48, 108, -1));

        showCityData.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        showCityData.setForeground(new java.awt.Color(0, 153, 153));
        showCityData.setText("Αποθήκευση Δεδομένων");
        showCityData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveData(evt);
            }
        });
        getContentPane().add(showCityData, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 80, 193, 35));

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("M E N U");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 6, -1, -1));

        back.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        back.setForeground(new java.awt.Color(0, 153, 153));
        back.setText("<-Πίσω");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 190, 109, -1));

        exit.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        exit.setForeground(new java.awt.Color(0, 153, 153));
        exit.setText("Έξοδος");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 190, 109, -1));

        jButton1.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Θερμοκρασία");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 133, -1, -1));

        jButton2.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 102, 102));
        jButton2.setText("Υγρασία");
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 133, 118, -1));

        jButton3.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 102, 102));
        jButton3.setText("Ταχ. Ανέμου");
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 133, 139, -1));

        jButton4.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 102, 102));
        jButton4.setText("Δείκτης UV");
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 133, 118, -1));

        jButton5.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 102));
        jButton5.setText("Λεκτική Πρόγνωση Καιρού");
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 133, -1, -1));

        jButton6.setForeground(new java.awt.Color(0, 153, 153));
        jButton6.setText("Αναζήτηση");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 45, -1, -1));

        tempLabel.setEditable(false);
        getContentPane().add(tempLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 162, 117, -1));

        humidityLabel.setEditable(false);
        getContentPane().add(humidityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 162, 117, -1));

        windLabel.setEditable(false);
        getContentPane().add(windLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 162, 148, -1));

        uvLabel.setEditable(false);
        getContentPane().add(uvLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 162, 117, -1));

        descriptionLabel.setEditable(false);
        getContentPane().add(descriptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 162, 191, -1));

        showCityData1.setFont(new java.awt.Font("Franklin Gothic Demi", 2, 14)); // NOI18N
        showCityData1.setForeground(new java.awt.Color(0, 153, 153));
        showCityData1.setText("Επιλογές");
        showCityData1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCityData(evt);
            }
        });
        getContentPane().add(showCityData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 80, 195, 35));

<<<<<<< Updated upstream
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(12, 12, 12)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(townName, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showCityData, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showCityData1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(humidityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(windLabel)
                        .addGap(6, 6, 6)
                        .addComponent(uvLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(townName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showCityData, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showCityData1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humidityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(windLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uvLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(exit))
                .addContainerGap())
        );
=======
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gr/eap/myteam/plh24ge3/GuiGe3/weather.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 260));
>>>>>>> Stashed changes

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void townNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_townNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_townNameActionPerformed

    private void saveData(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveData
        // Save searched data in db into the Weather Table
        if (this.tempLabel != null) {
            Weather results = new Weather(Integer.valueOf(tempLabel.getText()),
                    Integer.valueOf(humidityLabel.getText()), Integer.valueOf(windLabel.getText()),
                    Integer.valueOf(uvLabel.getText()), descriptionLabel.getText(), timestamp.format(new Date()),
                    sdf.format(localObsDateTime), townName.getText());
            ArrayList<Weather> savedResults = DbUtil.getDataFromWeatherTableWithName(townName.getText());
            boolean found = false;
            for(int i=0;i<savedResults.size();i++){
                Weather row = savedResults.get(i);
                if(row.getWeatherDate().equalsIgnoreCase(sdf.format(localObsDateTime)) && 
                        row.getHumidity() == results.getHumidity()  && row.getTemperature() == results.getTemperature() && row.getTown().equalsIgnoreCase(results.getTown()) && 
                        row.getUvIndex() == results.getUvIndex() && row.getWeatherDesc().equalsIgnoreCase(results.getWeatherDesc()) && row.getWindspeedKmph() == results.getWindspeedKmph() ){
                    System.out.println("data found in db no need to save again");
                    found = true;
                    break;
                }
            }
            if(!found){
                DbUtil.addDataWeatherInTable( results);
            }
        }
    }//GEN-LAST:event_saveData

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void search(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search
        // Call the api to get the weather data and create/update the Searches table to keep analytics about what the user searced
        String townName = this.townName.getText();
        if (townName != null) {
            JsonObject results = Okhttp.connect(townName);
            if (results != null) {
                JsonArray current_condition = results.getAsJsonArray("current_condition");
                JsonObject current_conditionJson = current_condition.get(0).getAsJsonObject();
                String temp_C = current_conditionJson.get("temp_C").getAsString();
                String humidity = current_conditionJson.get("humidity").getAsString();
                String windspeedKmph = current_conditionJson.get("windspeedKmph").getAsString();
                String uvIndex = current_conditionJson.get("uvIndex").getAsString();
                String weatherDesc = current_conditionJson.get("weatherDesc").getAsJsonArray().get(0).getAsJsonObject().get("value").getAsString();
                this.tempLabel.setText(temp_C);
                this.humidityLabel.setText(humidity);
                this.windLabel.setText(windspeedKmph);
                this.uvLabel.setText(uvIndex);
                this.descriptionLabel.setText(weatherDesc);
                ArrayList<Searches> searchesResults = DbUtil.getDataFromSearchesTableWithName( townName);
                if(searchesResults != null && searchesResults.size()>0){
                    Searches data = searchesResults.get(0);
                    int timesSearches = data.getTimesSearched();
                    data.setTimesSearched(++timesSearches);
                   DbUtil.addDataInSearchesTable(data.getId(),data);
                }else{
                    Searches firstTimeForTown = new Searches();
                    firstTimeForTown.setTown(townName);
                    firstTimeForTown.setTimesSearched(1);
                   DbUtil.addDataInSearchesTable(firstTimeForTown);
                }
                try {
                    System.out.println(current_conditionJson.get("localObsDateTime").getAsString());
                    this.localObsDateTime = sdfA.parse("2024-02-19 06:24 PM");
                } catch (ParseException ex) {
                    Logger.getLogger(DataMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Your input does not return any information");
                this.tempLabel.setText("");
                this.humidityLabel.setText("");
                this.windLabel.setText("");
                this.uvLabel.setText("");
                this.descriptionLabel.setText("");
            }
        }

    }//GEN-LAST:event_search

    private void showCityData(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCityData
                // move to another screen to show data for a specific town
                String townName = this.townName.getText();
               System.out.println("townName: " + townName);
               if(townName.equals("")){
                   JOptionPane.showMessageDialog(this, "Το όναμα πόλης είναι κενό");
               }else{
                   new DataView(townName).setVisible(true);
                   this.dispose();
               }
                
                
    }//GEN-LAST:event_showCityData

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataMenu().setVisible(true);
            }
        });
    }

    private SimpleDateFormat sdfA = new SimpleDateFormat("yyyy-MM-dd hh:mm aa",Locale.ENGLISH);
    private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    private static SimpleDateFormat timestamp = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
    private Date localObsDateTime;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextField descriptionLabel;
    private javax.swing.JButton exit;
    private javax.swing.JTextField humidityLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton showCityData;
    private javax.swing.JButton showCityData1;
    private javax.swing.JTextField tempLabel;
    private javax.swing.JTextField townName;
    private javax.swing.JTextField uvLabel;
    private javax.swing.JTextField windLabel;
    // End of variables declaration//GEN-END:variables
}
